üìù Ejercicios de SQL - Clase 2
üìå 1Ô∏è‚É£ Sentencia SELECT
Seleccionar todos los registros de la tabla alumnos.
SELECT * FROM alumnos;

Seleccionar solo los nombres y apellidos de la tabla alumnos.

Seleccionar los alumnos que sean de Argentina.

Seleccionar los alumnos que tengan un email registrado (no NULL).

Seleccionar los alumnos mayores de 18 a√±os.

üìå 2Ô∏è‚É£ Uso de WHERE y Operadores
Seleccionar los alumnos cuyo nombre comience con "J".
Seleccionar los alumnos cuyo dni sea mayor a 30.000.000.
Seleccionar los alumnos que no tengan telefono registrado.
Seleccionar los alumnos que sean de Argentina o Uruguay.
Seleccionar los alumnos que no sean de Argentina ni de Uruguay.
üìå 3Ô∏è‚É£ Uso de ORDER BY y LIMIT
Seleccionar los alumnos y ordenarlos por apellido en orden ascendente.
Seleccionar los alumnos y ordenarlos por dni en orden descendente.
Seleccionar los 5 primeros alumnos registrados en la tabla.
Seleccionar el alumno con el dni m√°s alto.
Seleccionar los √∫ltimos 3 alumnos registrados.
üìå 4Ô∏è‚É£ Uso de INSERT
Insertar un nuevo alumno en la tabla alumnos.
INSERT INTO alumnos (nombre, apellido, email, dni, telefono, nacionalidad)
VALUES ('Carlos', 'L√≥pez', 'carlos.lopez@gmail.com', 37845612, '1122334455', 'Chile');
Insertar dos alumnos nuevos en la misma consulta.
Insertar un alumno sin especificar telefono.
Insertar un alumno sin especificar email.
Insertar un alumno con nacionalidad diferente a Argentina.
üìå 5Ô∏è‚É£ Uso de UPDATE
Cambiar el email de un alumno con id_alumno = 2.
Modificar la nacionalidad de todos los alumnos de Chile a Per√∫.
Cambiar el telefono de un alumno espec√≠fico.
Modificar el apellido de un alumno cuyo nombre sea "Mar√≠a".
Aumentar en 1 el dni de todos los alumnos que sean de Argentina.
üìå 6Ô∏è‚É£ Uso de DELETE
Eliminar un alumno cuyo id_alumno = 5.
Eliminar todos los alumnos de Uruguay.
Eliminar a los alumnos que no tengan email registrado.
Eliminar todos los alumnos cuyo telefono sea NULL.
Eliminar un alumno con dni menor a 30.000.000.
üìå 7Ô∏è‚É£ Funciones de Agregaci√≥n (COUNT, SUM, AVG, MIN, MAX)
Contar cu√°ntos alumnos hay en la tabla.
Contar cu√°ntos alumnos tienen telefono registrado.
Obtener el dni m√°s alto registrado en la tabla.
Obtener el dni m√°s bajo registrado en la tabla.
Obtener la cantidad de alumnos por cada nacionalidad.
üìå 8Ô∏è‚É£ Uso de GROUP BY y HAVING
Obtener el n√∫mero de alumnos por nacionalidad.
Contar cu√°ntos alumnos tienen el mismo apellido.
Obtener la cantidad de alumnos con email registrado y agrupar por nacionalidad.
Seleccionar nacionalidades con m√°s de 2 alumnos registrados.
Obtener el promedio de dni de los alumnos por nacionalidad.
üìå 9Ô∏è‚É£ Uso de JOIN
Seleccionar todos los pedidos y los nombres de los alumnos que los hicieron.
SELECT alumnos.nombre, pedidos.producto 
FROM alumnos 
INNER JOIN pedidos ON alumnos.id_alumno = pedidos.id_alumno;
Hacer un LEFT JOIN entre alumnos y pedidos.
Hacer un RIGHT JOIN entre alumnos y pedidos.
Seleccionar solo los alumnos que no han hecho pedidos (LEFT JOIN con NULL).
Contar cu√°ntos pedidos ha hecho cada alumno.
üìå üîü Uso de UNION y INTERSECT
Unir los resultados de alumnos y profesores en una sola consulta.
Obtener los email que aparecen tanto en alumnos como en profesores.
Obtener los dni que aparecen en ambas tablas.
Unir los alumnos de Argentina y Uruguay en una misma consulta.
Seleccionar solo los alumnos que han hecho pedidos y unirlo con una lista de profesores que tambi√©n han hecho pedidos.